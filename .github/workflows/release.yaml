name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: The version bump to make.
        default: minor
        type: choice
        options:
        - major
        - minor
        - patch

  # release:
  #   types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  version:
    # uses: credibil/pipeline/.github/workflows/release.yaml@main
    # with:
    #   version: 1.1.2
    name: Set version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # set committer's git identity
      - name: Set identity 
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
      
      # get current version
      - name: Get current version
        id: current
        run: |
          set -ex
          version=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      # create release branch from main (main is set to next release version)
      - name: Create release branch
        run: |
          set -ex
          git push origin HEAD:release-${{ steps.current.outputs.version }}

      # # check semver against previous release
      # - name: Check semver
      #   uses: obi1kenobi/cargo-semver-checks-action@v2
      #   with:
      #     baseline-rev: v${{ steps.current.outputs.version }}

      # # calculate minimum version bump required
      # - uses: taiki-e/install-action@v2
      #   with:
      #     tool: cargo-semver-checks
      # - run: cargo build --manifest-path crates/ci/Cargo.toml
      # - name: Calculate version bump
      #   id: bump
      #   run: |
      #     level=$(./target/debug/calculate-version)
      #     echo "level=$level" >> $GITHUB_OUTPUT



      # bump main to next version
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-release
      - name: Release
        run: cargo release version ${{ inputs.bump }} --execute --no-confirm
          
      - name: Get next version
        id: next
        run: |
          set -ex
          version=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      # push next version to a branch and create a PR
      - name: Branch to update main
        run: |
          set -ex
          git commit -am "Bump to ${{ steps.next.outputs.version }}"
          git push origin HEAD:ci/next-${{ steps.next.outputs.version }}

      # - name: Make PR
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          branch: ci/next-${{ steps.next.outputs.version }}
          # base: main
          title: Bump to ${{ steps.next.outputs.version }}
          body: |
            This is an [automated pull request][process] indicating a new [release-${{ steps.current.outputs.version }} branch][branch] has been created and the `main` branch is getting its version number bumped from ${{ steps.current.outputs.version }} to ${{ steps.next.outputs.version }}.

            Maintainers should review the [release notes][RELEASES.md] for ${{ steps.current.outputs.version }} and make updates directly to the [release branch][branch].

            If any issues arise on the `main` branch before the release is made then the issue should first be fixed on `main` and then backport to the `release-${{ steps.current.outputs.version }}` branch.

            [RELEASES.md]: https://github.com/${{ github.repository }}/blob/release-${{ steps.current.outputs.version }}/RELEASES.md
            [branch]: https://github.com/${{ github.repository }}/tree/release-${{ steps.current.outputs.version }}
            [process]: https://docs.wasmtime.dev/contributing-release-process.html

    # 5. create candidate changelog/release notes
    # 6. create draft PR to main branch
    # 7. on merge, create tag and release