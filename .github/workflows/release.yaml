name: Create Release

on:
  workflow_dispatch:
    # inputs:
    #   action:
    #     description: The release action to take.
    #     default: create
    #     type: choice
    #     options:
    #       - create
    #       - release
    #       - patch

env:
  # The type of version bump to perform when cutting a release
  # N.B Cargo version rules allow "minor" for breaking changes while on 0.x.y 
  BUMP_TYPE: minor

permissions:
  contents: write
  pull-requests: write

jobs:
  # Create a new release branch from main (cut a release)
  create-branch:
    name: Create release branch
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - uses: actions/checkout@v5

      # set committer's git identity
      - name: Set git identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      # get the version for this release (from main) 
      - name: Release version
        id: release
        run: |
          set -ex
          version=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      # create release branch from main (already set to next version)
      - name: Create release branch
        run: |
          set -ex
          git push origin HEAD:release-${{ steps.release.outputs.version }}

  # Bump the version and create a PR to merge it back into 'main'
  increment-version:
    name: Increment 'main' version
    runs-on: ubuntu-latest
    needs: create-branch
    steps:
      - uses: actions/checkout@v5
        
      - name: Set git identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
      
      - name: Install cargo-release
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-release

      # bump main version
      - name: Bump 'main' version
        run: cargo release version ${{ env.BUMP_TYPE }} --execute --no-confirm

      - name: Get next version
        id: next
        run: |
          set -ex
          version=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      # create a branch for the main updates
      - name: Create branch to update 'main'
        run: |
          set -ex
          git commit -am "Bump to ${{ steps.next.outputs.version }}"
          git push origin HEAD:ci/next-${{ steps.next.outputs.version }}

      # update release notes for the next release
      - name: Update release notes
        uses: ./.github/actions/release-notes
        with:
          release-version: ${{ needs.create-branch.outputs.version }}
          next-version: ${{ steps.next.outputs.version }}



      # create PR to update main version
      - name: Create PR for 'main' version branch
        uses: peter-evans/create-pull-request@v7
        with:
          branch: ci/next-${{ steps.next.outputs.version }}
          title: Bump to ${{ steps.next.outputs.version }}
          body: |
            This pull request has been triggered by the creation of a new [release branch][branch]. 
            
            Specifically, it merges the new version number (bumped from ${{ needs.create-branch.outputs.version }} to ${{ steps.next.outputs.version }}) back into the `main` branch.

            Maintainers should review the [release notes][RELEASES.md] for ${{ needs.create-branch.outputs.version }} and make updates directly to the [release branch][branch].

            If any issues arise on the `main` branch before the release is made then the issue should be fixed on `main` and backported to the `release-${{ needs.create-branch.outputs.version }}` branch.

            [RELEASES.md]: https://github.com/${{ github.repository }}/blob/release-${{ needs.create-branch.outputs.version }}/RELEASES.md
            [branch]: https://github.com/${{ github.repository }}/tree/release-${{ needs.create-branch.outputs.version }}
