name: Release

on:
  workflow_dispatch:
  # release:
  #   types: [published]

jobs:
  version:
    # uses: credibil/pipeline/.github/workflows/release.yaml@main
    # with:
    #   version: 1.1.2
    name: Set version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        
      #  get current version
      - name: Get current version
        id: version
        run: |
          set -ex
          # Push the current contents of `main` to a new release branch
          cur=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "Current version: $cur"
          echo "version=$cur\n" >> $GITHUB_OUTPUT

      - name: Print current version
        run: |
          echo "Current version: ${{ steps.version.outputs.version }}"
          # git push origin HEAD:release-${{ steps.version.outputs.version }}

    # 1. create release branch
      # - run: git checkout -b <branch-name>
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 2. bump version using Cargo rules (patch | minor)
    # 3. increment this to next version (e.g. 1.1.2 -> 1.1.3-next)
    # 4. update Cargo.toml using next version
    # 5. create candidate changelog/release notes
    # 6. create draft PR to main branch
    # 7. on merge, create tag and release