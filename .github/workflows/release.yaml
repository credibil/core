name: Release

on:
  workflow_dispatch:
    inputs:
      action:
        description: |
          The release action to take.
        default: create
        type: choice
        options:
        - create
        - release
        - patch

env:
  # The type of version bump to perform when cutting a release
  # N.B Cargo version rules allow "minor" for breaking changes while on 0.x.y 
  BUMP_TYPE: minor

permissions:
  contents: write
  pull-requests: write

jobs:
  create-branch:
    if: ${{ inputs.action == 'create' }}
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      # get current version
      - name: Current version
        id: current
        run: |
          set -ex
          version=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      # set committer's git identity
      - name: Git identity 
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      # create release branch from main (main is already set to next release version)
      - name: Create release branch
        run: |
          set -ex
          git push origin HEAD:release-${{ steps.current.outputs.version }}

      - name: Install cargo-release
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-release

      # bump main to next version
      - name: Bump 'main' version
        run: cargo release version ${{ env.BUMP_TYPE }} --execute --no-confirm

      - name: Next version
        id: next
        run: |
          set -ex
          version=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      # push next version to a branch and create a PR
      - name: Create branch to update 'main' version
        run: |
          set -ex
          git commit -am "Bump to ${{ steps.next.outputs.version }}"
          git push origin HEAD:ci/next-${{ steps.next.outputs.version }}

      # create PR to update main version
      - name: Create PR for 'main' version branch
        uses: peter-evans/create-pull-request@v7
        with:
          branch: ci/next-${{ steps.next.outputs.version }}
          title: Bump to ${{ steps.next.outputs.version }}
          body: |
            This pull request has been triggered by the creation of a new [release branch][branch]. 
            
            Specifically, it merges the new version number (bumped from ${{ steps.current.outputs.version }} to ${{ steps.next.outputs.version }}) back into the `main` branch.

            Maintainers should review the [release notes][RELEASES.md] for ${{ steps.current.outputs.version }} and make updates directly to the [release branch][branch].

            If any issues arise on the `main` branch before the release is made then the issue should be fixed on `main` and backported to the `release-${{ steps.current.outputs.version }}` branch.

            [RELEASES.md]: https://github.com/${{ github.repository }}/blob/release-${{ steps.current.outputs.version }}/RELEASES.md
            [branch]: https://github.com/${{ github.repository }}/tree/release-${{ steps.current.outputs.version }}

  release-latest:
    if: ${{ inputs.action == 'release' }}
    name: Release latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        
  release-patch:
    if: ${{ inputs.action == 'patch' }}
    name: Release patch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        
      # # check semver against previous release
      # - name: Check semver
      #   uses: obi1kenobi/cargo-semver-checks-action@v2
      #   with:
      #     baseline-rev: v${{ steps.current.outputs.version }}

      # # calculate minimum version bump required
      # - uses: taiki-e/install-action@v2
      #   with:
      #     tool: cargo-semver-checks
      # - run: cargo build --manifest-path crates/ci/Cargo.toml
      # - name: Calculate version bump
      #   id: bump
      #   run: |
      #     level=$(./target/debug/calculate-version)
      #     echo "level=$level" >> $GITHUB_OUTPUT