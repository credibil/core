name: Release

on:
  workflow_dispatch:
  # release:
  #   types: [published]

jobs:
  version:
    # uses: credibil/pipeline/.github/workflows/release.yaml@main
    # with:
    #   version: 1.1.2
    name: Set version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
        
      - name: Get current version
        id: version
        run: |
          set -ex
          version=$(grep '^version =' Cargo.toml | head -n 1 | sed 's/.*"\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - run: rustc .github/ci/calculate-version.rs
        
      # - uses: taiki-e/install-action@v2
      #   with:
      #     tool: cargo-release
      # - name: Bump version
      #   run: cargo release version minor --execute --no-confirm
        # run: cargo release version ${{ steps.version.outputs.version }} --execute --no-confirm

      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@v2
        with:
          baseline-rev: v${{ steps.version.outputs.version }}
          
          # baseline-root: .

      # - name: Create release branch
      #   run: |
      #     echo "Current version: ${{ steps.version.outputs.version }}"
      #     # git push origin HEAD:release-${{ steps.version.outputs.version }}
      #     # git checkout -b release-${{ steps.version.outputs.version }}


    # 3. increment this to next version (e.g. 1.1.2 -> 1.1.3-next)
    # 4. update Cargo.toml using next version

    # 5. create candidate changelog/release notes
    # 6. create draft PR to main branch
    # 7. on merge, create tag and release